
  ULS INSTALLATION


  Quick Start - Linux
  ------------------
   On Debian platforms like Debian, Ubuntu, Mint, two deb-files is provided.
      uls-x.y.z-amd64.deb: for 64-bit mach(x86_64, amd64)

   To install the deb-file, download the proper file on the site(http://www.sourceforge.net/projects/uls).

   Enter the command as follows.
      sudo gdebi uls-x.y.z-amd64.deb

   To test the ULS, setup the examples of ULS by entering the command 'setup_uls_examples'.
      setup_uls_examples <dest-dir>
   There'll a directory called 'uls_examples' in the <dest-dir> after the command.

   To build the examples, do the followings
      $ make

   Test it:
      $ cd test_1st
      $ test_1st test_1st_sam.txt


  Building from the source files on Linux/macOS
  ------------------
     $ configure [--prefix=<INST_DIR>] [--with-etc-dir=<ADMIN_DIR>]
         To exclude java api, enter
         $ configure --disable-java
     $ make
     $ make check
     $ sudo make install // install it using admin privilege.

  1) Replace <PREFIX> with the file path on which ULS is installed.
    Unless it's specified, <PREFIX> will be '/usr/local'.

  2) You can also change the admin-directory using the option of 'configure'
      For instance, if you want it to be '/opt/uls_1_8/etc',
           run 'configure' like this:
           $ ./configure --with-etc-dir='/opt/uls_1_8/etc'
      The default admin-directory is '/usr/local/etc/uls'.

  3) If you want not to install the java-api of uls, specify the option '--disable-java'
       $ ./configure --disable-java

  4) After installation, There'll be directories named 'bin', 'lib', include', and 'share'
       below the directory <PREFIX>.
    The 'bin' contains uls a few of utilities doing the following function.
       o ulc2class  : converts ulc-file into header file,
                   The generated file can be used in c, c++, java, or c#.

       o ulfgen     : gives users the statistic information on uses of keywords of language.

       o uls_stream : makes binary formatted stream file from input files.

       o uninstall_uls: will remove the package from your system.

    The 'include' contains the header files to compile your source file.
    The 'lib' contains the ULS libraries, 'libuls.*' and 'libulscpp.*'.
       o libuls : the core library of ULS.

       o libcompat : the code collection for wide-string, ANSI-encoding.
          This library wrap the libuls, so it calls the core api in 'libuls'.
          The wide-string API is available on both Linux and Windows.
          The ANSI-encoding API is available only on Windows.

       o libulscpp : the c++ wrapper for libuls.

    The 'share' contains sample ulc-files, such as java.ulc, sql.ulc python3.ulc, and man pages.

  4) To uninstall the package, run 'uninstall_uls' in the 'bin' directory:
     $ sudo uninstall_uls


  Quick Start - Windows
  ---------------------
   How to install ULS-libraries into your system

   On Windows platforms,
     There is a self-extracting install program, uls-windows-1.8.x-x64.exe
         in the home-site(http://www.sourceforge.net/projects/uls).
     It contains the binaries which are targeted on x86_64.
     Download and run it.

    After installation, the path for uls utilities should be appened to the environment variable 'PATH'.
    The value of 'PATH' is identified in 'Advanced' tab -- 'Environment Variables' -- 'User variables for...'
        in 'My Computer' -- 'Properties'.

    Try to run the followings commands to see the usages of uls-tools in dos-prompt.
       o Ulc2Class -h
       o UlsStream -h
       o UlfGen -h


  Building UlsWin from Source files - Windows
  ---------------------
   1) How to build it from sources
    The ULS-windows version is distributed with solution-files(*.sln) and
       project-files(*.vcproj) in directory 'UlsWin'.

     a) After unpacking the source distribution (uls-windows-x.y.z.tar.xz),
           run VisualStudio by clicking UlsWin\UlsWin.sln.
     b) Choose 'Release/x64' configuration
     c) Build it

   2) Install binaries
     a) Run setupBinaries.bat
     b) Run installUlsWinStep1.bat
     c) Run installUlsWinStep2.bat with admin privilege.

   3) To build C++ examples,
     a) To see how the installed version works well, open 'UlsExamples.sln' in the UlsExamples directory.
        To link the example programs with the Uls libraries and run executables,
          it's necessary to inform the linker of the location of the libraries.
        Check and modify the 'Additional Library Directories' in 'Configuration Properties' of each projects.
        By default, all the projects in the UlsCpp\UlsExamples will search 'C:\Program Files\UlsWin\lib' for the libraries.

     b) Choose the configuration Release/x64 according to your build system.

     c) The solution produces the executables, DumpToks.exe, Css3Toks.exe,
           Html5Toks.exe, ShellToks.exe, MkfToks.exe, and TokSeq.exe in UlsExamples\x64\Release


  Demos - Windows
  ---------------------
   Now You can run the executables in the directory named 'UlsWin' in the desktop.
    Go to the directory 'Demos' in 'UlsWin'.
       o double-click the 'run_cpp_css3_demo.bat'.
       o double-click the 'run_cpp_html5_demo.bat'.
       o double-click the 'run_cpp_shell_demo.bat'.
       o double-click the 'run_cpp_mkf_demo.bat'.
       o double-click the 'run_cpp_tokseq_demo.bat'.

    For C# Users
      Entering each project folder 'Css3Toks', 'DumpToks', 'Html5Toks', and 'ShellToks' in CsExamples,
       try running the project ouputs as follows
       o double-click the 'run_cs_css3_demo.bat'.
       o double-click the 'run_cs_dump_demo.bat'.
       o double-click the 'run_cs_html5_demo.bat'.
       o double-click the 'run_cs_shell_demo.bat'.


  For Java Developers
  ---------------------
   The followings jdks are tested:
     a) oracle-jdk on MacOS
       jdk-11.0.18_macos-x64_bin.dmg
       After installing, it's necessary to set the environment variables:
          Set the environment variable JAVA_HOME
          Prepend the path '$JAVA_HOME/bin' in the environment PATH.
     b) openjdk on Linux(Mint)
       To install it, enter
       $ sudo apt install openjdk-8-jdk-headless
       $ sudo apt install openjdk-8-jdk
       You may use oracle-jdk as well.
     c) oracle-jdk-11 on Windows 10
       Read README in the subdirectory vs2022/UlsJava for Windows users

  To build & test on Linux/MacOS:
  	$ configure

  	To exclude java api, enter instead
  	$ configure --disable-java

     Compile the source files:
  	$ make

     Try to test the programs:
  	$ make check


 Uninstall
  ---------------------
    In order to uninstall ULS on Windows, go to the folder UlsWin in the desktop.
    Run the batch file named 'uninstall_uls.bat'.
    In Ubuntu, run the dpkg: dpkg -P uls

