	[  IDENT] class
	[  IDENT] TmplStack
	[       ] {
	[  IDENT] unsigned
	[  IDENT] long
	[  IDENT] long
	[       ] *
	[  IDENT] stkarray
	[       ] ;
	[  IDENT] int
	[  IDENT] stksiz
	[       ] ,
	[  IDENT] top
	[       ] ;
	[  IDENT] public
	[       ] :
	[  IDENT] TmplStack
	[       ] (
	[  IDENT] int
	[  IDENT] stacksize
	[       ] )
	[       ] {
	[  IDENT] if
	[       ] (
	[  IDENT] stacksize
	[       ] <
	[       ] =
	[ NUMBER] 0
	[       ] )
	[  IDENT] stacksize
	[       ] =
	[ NUMBER] 1
	[       ] ;
	[  IDENT] stkarray
	[       ] =
	[  IDENT] new
	[  IDENT] unsigned
	[  IDENT] long
	[  IDENT] long
	[       ] [
	[  IDENT] stacksize
	[       ] ]
	[       ] ;
	[  IDENT] stksiz
	[       ] =
	[  IDENT] stacksize
	[       ] ;
	[  IDENT] top
	[       ] =
	[ NUMBER] 0
	[       ] ;
	[       ] }
	[       ] ~
	[  IDENT] TmplStack
	[       ] (
	[       ] )
	[       ] {
	[  IDENT] delete
	[       ] [
	[       ] ]
	[  IDENT] stkarray
	[       ] ;
	[       ] }
	[  IDENT] bool
	[  IDENT] isEmpty
	[       ] (
	[       ] )
	[       ] {
	[  IDENT] return
	[  IDENT] top
	[       ] =
	[       ] =
	[ NUMBER] 0
	[       ] ?
	[  IDENT] true
	[       ] :
	[  IDENT] false
	[       ] ;
	[       ] }
	[  IDENT] bool
	[  IDENT] isFull
	[       ] (
	[       ] )
	[       ] {
	[  IDENT] return
	[  IDENT] top
	[       ] =
	[       ] =
	[  IDENT] stksiz
	[       ] ?
	[  IDENT] true
	[       ] :
	[  IDENT] false
	[       ] ;
	[       ] }
	[  IDENT] void
	[  IDENT] push
	[       ] (
	[  IDENT] const
	[  IDENT] unsigned
	[  IDENT] long
	[  IDENT] long
	[       ] &
	[  IDENT] elmt
	[       ] )
	[       ] {
	[  IDENT] if
	[       ] (
	[  IDENT] isFull
	[       ] (
	[       ] )
	[       ] )
	[       ] {
	[  IDENT] return
	[       ] ;
	[       ] }
	[  IDENT] stkarray
	[       ] [
	[  IDENT] top
	[       ] +
	[       ] +
	[       ] ]
	[       ] =
	[  IDENT] elmt
	[       ] ;
	[       ] }
	[  IDENT] unsigned
	[  IDENT] long
	[  IDENT] long
	[  IDENT] pop
	[       ] (
	[       ] )
	[       ] {
	[  IDENT] if
	[       ] (
	[  IDENT] isEmpty
	[       ] (
	[       ] )
	[       ] )
	[       ] {
	[  IDENT] return
	[       ] ;
	[       ] }
	[  IDENT] else
	[       ] {
	[       ] -
	[       ] -
	[  IDENT] top
	[       ] ;
	[       ] }
	[  IDENT] return
	[  IDENT] stkarray
	[       ] [
	[  IDENT] top
	[       ] ]
	[       ] ;
	[       ] }
	[       ] }
	[       ] ;
